name: Server Workflow

permissions:
  contents: write  # Aligns with reusable workflow requirements

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

on:
  push:
    paths:
      - 'invman_server/**'  

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  WORK_DIR: invman_server
  SERVERPOD_VERSION: 2.3.1
  FLUTTER_VERSION: 3.29.x

jobs:
  unit_tests_and_coverage:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{env.WORK_DIR}}

    steps:
      - name: 🛠️ Checkout code
        uses: actions/checkout@v3

      - name: Write password file
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'passwords.yaml'
          fileDir: ${{env.WORK_DIR}}/config/
          encodedString: ${{ secrets.PASSWORDS_BASE64 }}

      - name: ⚙️ Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true 

      - name: 🔧 Install dependencies
        run: |
          dart pub get
          dart pub global activate serverpod_cli ${{ env.SERVERPOD_VERSION }}
      
      - name: ✨ Serverpod generate
        run: |
          serverpod generate

      - name: ▶️ Run tests with coverage
        run: |
          dart test -x integration --coverage=coverage
          dart pub global activate coverage
          dart pub global run coverage:format_coverage \
            --lcov \
            --in=coverage \
            --out=coverage/lcov.info \
            --packages=.dart_tool/package_config.json

      - name: 📄 Report code coverage
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Backend Coverage Report'

  build-and-push-image:
    if: github.ref == 'refs/heads/main'
    needs: unit_tests_and_coverage

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{env.WORK_DIR}}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: ⚙️ Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true 

      - name: 🔧 Install dependencies
        run: |
          dart pub get
          dart pub global activate serverpod_cli ${{ env.SERVERPOD_VERSION }}
      
      - name: ✨ Serverpod generate
        run: |
          serverpod generate

      - name: Write password file
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'passwords.yaml'
          fileDir: ${{env.WORK_DIR}}/config/
          encodedString: ${{ secrets.PASSWORDS_BASE64 }}
      
      - name: Create .env File
        run: |
          echo "YFIN_BASE_URL=${{ vars.YFIN_BASE_URL }}" > .env

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{env.WORK_DIR}}
          push: true
          tags:
            ghcr.io/baudee/invman:latest
          labels: ${{ steps.meta.outputs.labels }}
